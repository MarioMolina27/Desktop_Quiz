<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5goGCxY0Umu7wQAACw1JREFU
        aEPVm2lMldkdxs/FQRpmOpnSTmfiGJtpmk7sfGjTqV2mlWZkjDXazIRpmthG06SJBf3Qql9MW03bhPrB
        1qQ6VksiGmU01Qg6YlxQEVRcEI0rKgqyiRu7KCBIf8+5594Ksly47wv6JCf3ve9yzv8557+e+14TLY4e
        PWqWLVtmzp49a7q7u01GRkbs9evXx9++fXtyfX19alNTU3pra2v+o0ePytrb21s6Ojq6njx50q2mY51r
        a2sr0z3Nzc3pdXV182prayffvHlzfHZ2dqz6PHfunElLS7NjjQqOHTtm5s+fb65cuWIQ0p67cOHCV27d
        uvUhBJc+fPhwN0RKOzs7WyDWhdARQffqGSailAna3dLSsvTOnTsfqm+N8eDBA3P16lUzd+5cK8OIgFk3
        27dvNwhipkyZEigvLx939+7d2QiThaAVXV1dHU7+qKG+1Cern3Xv3r3ZrPq4GTNmBDS2ZJAsvuLixYum
        oKDAqm5JSclXITqH1dzPqjRJRf2C+tYYGktjamxOm8LCQqtlnuPIkSO2McPm+PHjY6urqz9A3TY/fvy4
        3k+ivaGxNKbGrqmp+aC4uHhsZWVlWD5PUFRUZPbv329X9cyZMwn3799fgJMpGUmivaGx8RElOMUFly5d
        SuCUlVGyRoXz58+HVfjGjRvvyOPKqdhRnwNIFskk2fhqZZXMw4IeDD2MKk/CKX3upUPyCpJJsknG3nJH
        DKmGZkvASUwiROShRhGHl5GGZJOMklUyS/aI1VvGH7JZzZojG+z5OYZklKySma+WQ0SOTDfpAdmFVOV5
        XtnekKySOWTTgxJWnCWR0GeCnIGXNosw7Xj304SUbDzsFlomK7KZVsA4re62qCGZJbsiisKoOPUJZS3S
        fcVZ8tkFXntjzXxZWdk7JAqv0P/LjY2N8WRP8azGBCYhkwnxzG4ku8KnuIjTMxmZ8lKlatxrlFQozgYf
        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
        DhvG/A8WBOxwTYwWdAAAAABJRU5ErkJggg==
</value>
  </data>
</root>